{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arif/Coding/projects/emboarding/next-frontend/src/pages/index.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Container, Flex } from \"@chakra-ui/layout\";\nimport { Thead, Tr, Th, Tbody, Td, Box, Avatar, Switch, useToast } from \"@chakra-ui/react\";\nimport { Table } from \"@chakra-ui/table\";\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport AddNewMember from \"../components/AddNewMember\";\nexport default function Home({\n  data\n}) {\n  const toast = useToast();\n  const {\n    0: users,\n    1: setUsers\n  } = useState([]);\n\n  const fetchStuff = async () => {\n    const usersL = [];\n    const process = Object.keys(data).map(async id => {\n      try {\n        const {\n          data: appdata\n        } = await axios.get(`http://localhost:5000/users/apps?userId=${data[id].id}`);\n        data[id] = _objectSpread(_objectSpread({}, data[id]), {}, {\n          access: appdata.access\n        });\n        usersL.push(data[id]);\n      } catch (error) {\n        data[id] = _objectSpread(_objectSpread({}, data[id]), {}, {\n          access: false\n        });\n        usersL.push(data[id]);\n      }\n    });\n    Promise.all(process).then(() => setUsers(usersL));\n  };\n\n  useEffect(() => {\n    fetchStuff();\n  }, []);\n\n  const changeAppAcess = async ({\n    access,\n    userId\n  }) => {\n    console.log(access, userId);\n\n    try {\n      const {\n        data\n      } = await axios.patch(`http://localhost:5000/users/apps`, {\n        access,\n        userId\n      });\n    } catch (error) {}\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"7xl\",\n    children: [/*#__PURE__*/_jsxDEV(Flex, {\n      my: 8,\n      justify: \"flex-end\",\n      children: /*#__PURE__*/_jsxDEV(AddNewMember, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      borderWidth: 1,\n      shadow: \"md\",\n      rounded: \"md\",\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        variant: \"simple\",\n        children: [/*#__PURE__*/_jsxDEV(Thead, {\n          children: /*#__PURE__*/_jsxDEV(Tr, {\n            children: [/*#__PURE__*/_jsxDEV(Th, {\n              children: \"Avatar\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Trello Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Th, {\n              children: \"Active\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tbody, {\n          children: Object.keys(data).map(key => {\n            return /*#__PURE__*/_jsxDEV(Tr, {\n              children: [/*#__PURE__*/_jsxDEV(Td, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  src: data[key].avatar,\n                  alt: data[key].name + \" avatar\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: data[key].name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: data[key].email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: data[key].trelloMemberId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Td, {\n                children: /*#__PURE__*/_jsxDEV(Switch, {\n                  colorScheme: \"purple\",\n                  onChange: e => changeAppAcess({\n                    access: e.target.checked,\n                    userId: key\n                  }),\n                  defaultChecked: data[key].access\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 19\n              }, this)]\n            }, key, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\nexport const getServerSideProps = async context => {\n  const res = await fetch(\"http://localhost:5002/users_access\");\n  const data = await res.json();\n  return {\n    props: {\n      data\n    }\n  };\n};","map":{"version":3,"sources":["/home/arif/Coding/projects/emboarding/next-frontend/src/pages/index.tsx"],"names":["Container","Flex","Thead","Tr","Th","Tbody","Td","Box","Avatar","Switch","useToast","Table","axios","React","useEffect","useState","AddNewMember","Home","data","toast","users","setUsers","fetchStuff","usersL","process","Object","keys","map","id","appdata","get","access","push","error","Promise","all","then","changeAppAcess","userId","console","log","patch","key","avatar","name","email","trelloMemberId","e","target","checked","getServerSideProps","context","res","fetch","json","props"],"mappings":"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","sourcesContent":["import { Button } from \"@chakra-ui/button\";\nimport { Container, Flex } from \"@chakra-ui/layout\";\nimport {\n  TableCaption,\n  Thead,\n  Tr,\n  Th,\n  Tbody,\n  Td,\n  Tfoot,\n  Box,\n  Avatar,\n  Switch,\n  useToast,\n} from \"@chakra-ui/react\";\nimport { Table } from \"@chakra-ui/table\";\nimport axios from \"axios\";\nimport { GetServerSideProps } from \"next\";\nimport React, { useEffect, useState } from \"react\";\nimport react from \"react\";\nimport AddNewMember from \"../components/AddNewMember\";\n\nexport default function Home({ data }) {\n  const toast = useToast();\n  const [users, setUsers] = useState([]);\n\n  const fetchStuff = async () => {\n    const usersL = [];\n    const process = Object.keys(data).map(async (id) => {\n      try {\n        const { data: appdata } = await axios.get(\n          `http://localhost:5000/users/apps?userId=${data[id].id}`\n        );\n        data[id] = { ...data[id], access: appdata.access };\n        usersL.push(data[id]);\n      } catch (error) {\n        data[id] = { ...data[id], access: false };\n        usersL.push(data[id]);\n      }\n    });\n\n    Promise.all(process).then(() => setUsers(usersL));\n  };\n  useEffect(() => {\n    fetchStuff();\n  }, []);\n\n  const changeAppAcess = async ({access, userId}) => {\n    console.log(access, userId)\n    try {\n      const {data} = await axios.patch(`http://localhost:5000/users/apps`, { access, userId });\n    } catch (error) {}\n  };\n\n  return (\n    <Container maxW=\"7xl\">\n      <Flex my={8} justify=\"flex-end\">\n        <AddNewMember />\n      </Flex>\n\n      <Box borderWidth={1} shadow=\"md\" rounded=\"md\">\n        <Table variant=\"simple\">\n          <Thead>\n            <Tr>\n              <Th>Avatar</Th>\n              <Th>Name</Th>\n              <Th>Email</Th>\n              <Th>Trello Id</Th>\n              <Th>Active</Th>\n            </Tr>\n          </Thead>\n          <Tbody>\n            {Object.keys(data).map((key) => {\n              return (\n                <Tr key={key}>\n                  <Td>\n                    <Avatar\n                      src={data[key].avatar}\n                      alt={data[key].name + \" avatar\"}\n                    />\n                  </Td>\n                  <Td>{data[key].name}</Td>\n                  <Td>{data[key].email}</Td>\n                  <Td>{data[key].trelloMemberId}</Td>\n                  <Td>\n                    <Switch\n                      colorScheme=\"purple\"\n                      onChange={(e) =>\n                        changeAppAcess({\n                          access: e.target.checked,\n                          userId: key,\n                        })\n                      }\n                      defaultChecked={data[key].access}\n                    />\n                  </Td>\n                </Tr>\n              );\n            })}\n          </Tbody>\n        </Table>\n      </Box>\n    </Container>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const res = await fetch(\"http://localhost:5002/users_access\");\n  const data = await res.json();\n  return {\n    props: {\n      data,\n    },\n  };\n};\n"]},"metadata":{},"sourceType":"module"}