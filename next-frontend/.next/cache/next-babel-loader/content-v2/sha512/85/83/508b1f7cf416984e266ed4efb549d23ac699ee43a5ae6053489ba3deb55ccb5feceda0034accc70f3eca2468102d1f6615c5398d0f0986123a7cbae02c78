{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/arif/Coding/projects/emboarding/next-frontend/src/pages/_app.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport \"../../styles/globals.css\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\nconst theme = extendTheme({\n  fonts: {\n    heading: \"Open Sans, sans-serif\",\n    body: \"Comfortaa, cursive\",\n    mono: \"Open Sans, monospace\"\n  }\n});\n\nfunction MyApp({\n  Component,\n  pageProps\n}) {\n  return /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n\nexport default MyApp;","map":{"version":3,"sources":["/home/arif/Coding/projects/emboarding/next-frontend/src/pages/_app.tsx"],"names":["ChakraProvider","extendTheme","theme","fonts","heading","body","mono","MyApp","Component","pageProps"],"mappings":";;;;;;;;;AAAA,OAAO,0BAAP;AACA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,kBAA5C;AAEA,MAAMC,KAAK,GAAGD,WAAW,CAAC;AACxBE,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAE,uBADJ;AAELC,IAAAA,IAAI,EAAE,oBAFD;AAGLC,IAAAA,IAAI,EAAE;AAHD;AADiB,CAAD,CAAzB;;AAQA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA;AAAb,CAAf,EAAyC;AACvC,sBACE,QAAC,cAAD;AAAgB,IAAA,KAAK,EAAEP,KAAvB;AAAA,2BACE,QAAC,SAAD,oBAAeO,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;;AAED,eAAeF,KAAf","sourcesContent":["import \"../../styles/globals.css\";\nimport { ChakraProvider, extendTheme } from \"@chakra-ui/react\";\n\nconst theme = extendTheme({\n  fonts: {\n    heading: \"Open Sans, sans-serif\",\n    body: \"Comfortaa, cursive\",\n    mono: \"Open Sans, monospace\",\n  },\n})\n\nfunction MyApp({ Component, pageProps }) {\n  return (\n    <ChakraProvider theme={theme}>\n      <Component {...pageProps} />\n    </ChakraProvider>\n  );\n}\n\nexport default MyApp;\n"]},"metadata":{},"sourceType":"module"}