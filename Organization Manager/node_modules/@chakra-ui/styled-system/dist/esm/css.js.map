{"version":3,"sources":["../../src/css.ts"],"names":["isObject","mergeWith","merge","runIfFn","pseudoSelectors","systemProps","systemPropConfigs","expandResponsive","styles","theme","__breakpoints","isResponsive","toArrayValue","media","medias","computedStyles","key","value","Array","isArray","queries","slice","length","index","getCss","options","configs","pseudos","css","stylesOrFn","nested","_styles","k","valueOrFn","config","property","rawValue","transform","processResult","static","staticStyles","cssFn"],"mappings":"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","sourcesContent":["import { Dict, isObject, mergeWith as merge, runIfFn } from \"@chakra-ui/utils\"\nimport * as CSS from \"csstype\"\nimport { Config, PropConfig } from \"./prop-config\"\nimport { pseudoSelectors } from \"./pseudos\"\nimport { systemProps as systemPropConfigs } from \"./system\"\nimport { CssTheme, StyleObjectOrFn } from \"./types\"\n\nexport const expandResponsive = (styles: Dict) => (theme: Dict) => {\n  if (!theme.__breakpoints) return styles\n  const { isResponsive, toArrayValue, media: medias } = theme.__breakpoints\n\n  const computedStyles: Dict = {}\n\n  for (const key in styles) {\n    let value = runIfFn(styles[key], theme)\n\n    if (value == null) continue\n\n    value = isObject(value) && isResponsive(value) ? toArrayValue(value) : value\n\n    if (!Array.isArray(value)) {\n      computedStyles[key] = value\n      continue\n    }\n\n    const queries = value.slice(0, medias.length).length\n\n    for (let index = 0; index < queries; index += 1) {\n      const media = medias?.[index]\n\n      if (!media) {\n        computedStyles[key] = value[index]\n        continue\n      }\n\n      computedStyles[media] = computedStyles[media] || {}\n\n      if (value[index] == null) {\n        continue\n      }\n\n      computedStyles[media][key] = value[index]\n    }\n  }\n\n  return computedStyles\n}\n\ninterface Options {\n  theme: CssTheme\n  configs?: Config\n  pseudos?: Record<string, CSS.Pseudos | (string & {})>\n}\n\nexport function getCss(options: Options) {\n  const { configs = {}, pseudos = {}, theme } = options\n\n  const css = (stylesOrFn: Dict, nested = false) => {\n    const _styles = runIfFn(stylesOrFn, theme)\n    const styles = expandResponsive(_styles)(theme)\n\n    let computedStyles: Dict = {}\n\n    for (const k in styles) {\n      const valueOrFn = styles[k]\n      const value = runIfFn(valueOrFn, theme)\n      const key = k in pseudos ? pseudos[k] : k\n\n      let config = configs[key]\n\n      if (config === true) {\n        config = { property: key } as PropConfig\n      }\n\n      if (isObject(value)) {\n        computedStyles[key] = css(value, true)\n        continue\n      }\n\n      let rawValue = config?.transform?.(value, theme) ?? value\n      rawValue = config?.processResult ? css(rawValue, true) : rawValue\n\n      if (config?.property) {\n        config.property = runIfFn(config.property, theme)\n      }\n\n      if (!nested && config?.static) {\n        const staticStyles = runIfFn(config.static, theme)\n        computedStyles = merge({}, computedStyles, staticStyles)\n      }\n\n      if (config?.property && Array.isArray(config?.property)) {\n        for (const property of config.property) {\n          computedStyles[property] = rawValue\n        }\n        continue\n      }\n\n      if (config?.property) {\n        if (config.property === \"&\" && isObject(rawValue)) {\n          computedStyles = merge({}, computedStyles, rawValue)\n        } else {\n          computedStyles[config.property as string] = rawValue\n        }\n        continue\n      }\n\n      if (isObject(rawValue)) {\n        computedStyles = merge({}, computedStyles, rawValue)\n        continue\n      }\n\n      computedStyles[key] = rawValue\n    }\n\n    return computedStyles\n  }\n\n  return css\n}\n\nexport const css = (styles: StyleObjectOrFn) => (theme: any) => {\n  const cssFn = getCss({\n    theme,\n    pseudos: pseudoSelectors,\n    configs: systemPropConfigs,\n  })\n  return cssFn(styles)\n}\n"],"file":"css.js"}