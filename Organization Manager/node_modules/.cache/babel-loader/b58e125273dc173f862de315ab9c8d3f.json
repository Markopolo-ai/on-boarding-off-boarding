{"ast":null,"code":"import { isPlainObject } from 'is-plain-object';\nimport { getUserAgent } from 'universal-user-agent';\n\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach(key => {\n    if (isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, {\n        [key]: options[key]\n      });else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, {\n        [key]: options[key]\n      });\n    }\n  });\n  return result;\n}\n\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? {\n      method,\n      url\n    } : {\n      url: method\n    }, options);\n  } else {\n    options = Object.assign({}, route);\n  } // lowercase header names before merging with defaults to avoid duplicates\n\n\n  options.headers = lowercaseKeys(options.headers); // remove properties with undefined values before merging\n\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options); // mediaType.previews arrays are merged, instead of overwritten\n\n  if (defaults && defaults.mediaType.previews.length) {\n    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);\n  }\n\n  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, \"\"));\n  return mergedOptions;\n}\n\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n\n  if (names.length === 0) {\n    return url;\n  }\n\n  return url + separator + names.map(name => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\nconst urlVariableRegex = /\\{[^}]+\\}/g;\n\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\n\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n\n  if (!matches) {\n    return [];\n  }\n\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\nfunction omit(object, keysToOmit) {\n  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n} // Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* istanbul ignore file */\n\n\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n\n    return part;\n  }).join(\"\");\n}\n\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\n\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key],\n      result = [];\n\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n\n      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            tmp.push(encodeValue(operator, value));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n\n  return result;\n}\n\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\n\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n    if (expression) {\n      let operator = \"\";\n      const values = [];\n\n      if (operators.indexOf(expression.charAt(0)) !== -1) {\n        operator = expression.charAt(0);\n        expression = expression.substr(1);\n      }\n\n      expression.split(/,/g).forEach(function (variable) {\n        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n      });\n\n      if (operator && operator !== \"+\") {\n        var separator = \",\";\n\n        if (operator === \"?\") {\n          separator = \"&\";\n        } else if (operator !== \"#\") {\n          separator = operator;\n        }\n\n        return (values.length !== 0 ? operator : \"\") + values.join(separator);\n      } else {\n        return values.join(\",\");\n      }\n    } else {\n      return encodeReserved(literal);\n    }\n  });\n}\n\nfunction parse(options) {\n  // https://fetch.spec.whatwg.org/#methods\n  let method = options.method.toUpperCase(); // replace :varname with {varname} to make it RFC 6570 compatible\n\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"mediaType\"]); // extract variable names from URL to calculate remaining variables later\n\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n\n  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(\",\");\n    }\n\n    if (options.mediaType.previews.length) {\n      const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {\n        const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n        return `application/vnd.github.${preview}-preview${format}`;\n      }).join(\",\");\n    }\n  } // for GET/HEAD requests, set URL query parameters from remaining parameters\n  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n\n\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      } else {\n        headers[\"content-length\"] = 0;\n      }\n    }\n  } // default content-type for JSON if body is set\n\n\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  } // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n  // fetch does not allow to set `content-length` header, but we can set body to an empty string\n\n\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  } // Only return body/request keys if present\n\n\n  return Object.assign({\n    method,\n    url,\n    headers\n  }, typeof body !== \"undefined\" ? {\n    body\n  } : null, options.request ? {\n    request: options.request\n  } : null);\n}\n\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS = merge(oldDefaults, newDefaults);\n  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n  return Object.assign(endpoint, {\n    DEFAULTS,\n    defaults: withDefaults.bind(null, DEFAULTS),\n    merge: merge.bind(null, DEFAULTS),\n    parse\n  });\n}\n\nconst VERSION = \"6.0.11\";\nconst userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`; // DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\n\nconst DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\",\n    previews: []\n  }\n};\nconst endpoint = withDefaults(null, DEFAULTS);\nexport { endpoint };","map":{"version":3,"sources":["../dist-src/util/lowercase-keys.js","../dist-src/util/merge-deep.js","../dist-src/util/remove-undefined-properties.js","../dist-src/merge.js","../dist-src/util/add-query-parameters.js","../dist-src/util/extract-url-variable-names.js","../dist-src/util/omit.js","../dist-src/util/url-template.js","../dist-src/parse.js","../dist-src/endpoint-with-defaults.js","../dist-src/with-defaults.js","../dist-src/version.js","../dist-src/defaults.js","../dist-src/index.js"],"names":[],"mappings":"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","sourcesContent":["export function lowercaseKeys(object) {\n    if (!object) {\n        return {};\n    }\n    return Object.keys(object).reduce((newObj, key) => {\n        newObj[key.toLowerCase()] = object[key];\n        return newObj;\n    }, {});\n}\n","import { isPlainObject } from \"is-plain-object\";\nexport function mergeDeep(defaults, options) {\n    const result = Object.assign({}, defaults);\n    Object.keys(options).forEach((key) => {\n        if (isPlainObject(options[key])) {\n            if (!(key in defaults))\n                Object.assign(result, { [key]: options[key] });\n            else\n                result[key] = mergeDeep(defaults[key], options[key]);\n        }\n        else {\n            Object.assign(result, { [key]: options[key] });\n        }\n    });\n    return result;\n}\n","export function removeUndefinedProperties(obj) {\n    for (const key in obj) {\n        if (obj[key] === undefined) {\n            delete obj[key];\n        }\n    }\n    return obj;\n}\n","import { lowercaseKeys } from \"./util/lowercase-keys\";\nimport { mergeDeep } from \"./util/merge-deep\";\nimport { removeUndefinedProperties } from \"./util/remove-undefined-properties\";\nexport function merge(defaults, route, options) {\n    if (typeof route === \"string\") {\n        let [method, url] = route.split(\" \");\n        options = Object.assign(url ? { method, url } : { url: method }, options);\n    }\n    else {\n        options = Object.assign({}, route);\n    }\n    // lowercase header names before merging with defaults to avoid duplicates\n    options.headers = lowercaseKeys(options.headers);\n    // remove properties with undefined values before merging\n    removeUndefinedProperties(options);\n    removeUndefinedProperties(options.headers);\n    const mergedOptions = mergeDeep(defaults || {}, options);\n    // mediaType.previews arrays are merged, instead of overwritten\n    if (defaults && defaults.mediaType.previews.length) {\n        mergedOptions.mediaType.previews = defaults.mediaType.previews\n            .filter((preview) => !mergedOptions.mediaType.previews.includes(preview))\n            .concat(mergedOptions.mediaType.previews);\n    }\n    mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map((preview) => preview.replace(/-preview/, \"\"));\n    return mergedOptions;\n}\n","export function addQueryParameters(url, parameters) {\n    const separator = /\\?/.test(url) ? \"&\" : \"?\";\n    const names = Object.keys(parameters);\n    if (names.length === 0) {\n        return url;\n    }\n    return (url +\n        separator +\n        names\n            .map((name) => {\n            if (name === \"q\") {\n                return (\"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\"));\n            }\n            return `${name}=${encodeURIComponent(parameters[name])}`;\n        })\n            .join(\"&\"));\n}\n","const urlVariableRegex = /\\{[^}]+\\}/g;\nfunction removeNonChars(variableName) {\n    return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\nexport function extractUrlVariableNames(url) {\n    const matches = url.match(urlVariableRegex);\n    if (!matches) {\n        return [];\n    }\n    return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n","export function omit(object, keysToOmit) {\n    return Object.keys(object)\n        .filter((option) => !keysToOmit.includes(option))\n        .reduce((obj, key) => {\n        obj[key] = object[key];\n        return obj;\n    }, {});\n}\n","// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n    return str\n        .split(/(%[0-9A-Fa-f]{2})/g)\n        .map(function (part) {\n        if (!/%[0-9A-Fa-f]/.test(part)) {\n            part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n        }\n        return part;\n    })\n        .join(\"\");\n}\nfunction encodeUnreserved(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n        return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n    });\n}\nfunction encodeValue(operator, value, key) {\n    value =\n        operator === \"+\" || operator === \"#\"\n            ? encodeReserved(value)\n            : encodeUnreserved(value);\n    if (key) {\n        return encodeUnreserved(key) + \"=\" + value;\n    }\n    else {\n        return value;\n    }\n}\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\nfunction isKeyOperator(operator) {\n    return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\nfunction getValues(context, operator, key, modifier) {\n    var value = context[key], result = [];\n    if (isDefined(value) && value !== \"\") {\n        if (typeof value === \"string\" ||\n            typeof value === \"number\" ||\n            typeof value === \"boolean\") {\n            value = value.toString();\n            if (modifier && modifier !== \"*\") {\n                value = value.substring(0, parseInt(modifier, 10));\n            }\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n        }\n        else {\n            if (modifier === \"*\") {\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n                    });\n                }\n                else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            result.push(encodeValue(operator, value[k], k));\n                        }\n                    });\n                }\n            }\n            else {\n                const tmp = [];\n                if (Array.isArray(value)) {\n                    value.filter(isDefined).forEach(function (value) {\n                        tmp.push(encodeValue(operator, value));\n                    });\n                }\n                else {\n                    Object.keys(value).forEach(function (k) {\n                        if (isDefined(value[k])) {\n                            tmp.push(encodeUnreserved(k));\n                            tmp.push(encodeValue(operator, value[k].toString()));\n                        }\n                    });\n                }\n                if (isKeyOperator(operator)) {\n                    result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n                }\n                else if (tmp.length !== 0) {\n                    result.push(tmp.join(\",\"));\n                }\n            }\n        }\n    }\n    else {\n        if (operator === \";\") {\n            if (isDefined(value)) {\n                result.push(encodeUnreserved(key));\n            }\n        }\n        else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n            result.push(encodeUnreserved(key) + \"=\");\n        }\n        else if (value === \"\") {\n            result.push(\"\");\n        }\n    }\n    return result;\n}\nexport function parseUrl(template) {\n    return {\n        expand: expand.bind(null, template),\n    };\n}\nfunction expand(template, context) {\n    var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n    return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n        if (expression) {\n            let operator = \"\";\n            const values = [];\n            if (operators.indexOf(expression.charAt(0)) !== -1) {\n                operator = expression.charAt(0);\n                expression = expression.substr(1);\n            }\n            expression.split(/,/g).forEach(function (variable) {\n                var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n                values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n            });\n            if (operator && operator !== \"+\") {\n                var separator = \",\";\n                if (operator === \"?\") {\n                    separator = \"&\";\n                }\n                else if (operator !== \"#\") {\n                    separator = operator;\n                }\n                return (values.length !== 0 ? operator : \"\") + values.join(separator);\n            }\n            else {\n                return values.join(\",\");\n            }\n        }\n        else {\n            return encodeReserved(literal);\n        }\n    });\n}\n","import { addQueryParameters } from \"./util/add-query-parameters\";\nimport { extractUrlVariableNames } from \"./util/extract-url-variable-names\";\nimport { omit } from \"./util/omit\";\nimport { parseUrl } from \"./util/url-template\";\nexport function parse(options) {\n    // https://fetch.spec.whatwg.org/#methods\n    let method = options.method.toUpperCase();\n    // replace :varname with {varname} to make it RFC 6570 compatible\n    let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n    let headers = Object.assign({}, options.headers);\n    let body;\n    let parameters = omit(options, [\n        \"method\",\n        \"baseUrl\",\n        \"url\",\n        \"headers\",\n        \"request\",\n        \"mediaType\",\n    ]);\n    // extract variable names from URL to calculate remaining variables later\n    const urlVariableNames = extractUrlVariableNames(url);\n    url = parseUrl(url).expand(parameters);\n    if (!/^http/.test(url)) {\n        url = options.baseUrl + url;\n    }\n    const omittedParameters = Object.keys(options)\n        .filter((option) => urlVariableNames.includes(option))\n        .concat(\"baseUrl\");\n    const remainingParameters = omit(parameters, omittedParameters);\n    const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n    if (!isBinaryRequest) {\n        if (options.mediaType.format) {\n            // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n            headers.accept = headers.accept\n                .split(/,/)\n                .map((preview) => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`))\n                .join(\",\");\n        }\n        if (options.mediaType.previews.length) {\n            const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n            headers.accept = previewsFromAcceptHeader\n                .concat(options.mediaType.previews)\n                .map((preview) => {\n                const format = options.mediaType.format\n                    ? `.${options.mediaType.format}`\n                    : \"+json\";\n                return `application/vnd.github.${preview}-preview${format}`;\n            })\n                .join(\",\");\n        }\n    }\n    // for GET/HEAD requests, set URL query parameters from remaining parameters\n    // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n    if ([\"GET\", \"HEAD\"].includes(method)) {\n        url = addQueryParameters(url, remainingParameters);\n    }\n    else {\n        if (\"data\" in remainingParameters) {\n            body = remainingParameters.data;\n        }\n        else {\n            if (Object.keys(remainingParameters).length) {\n                body = remainingParameters;\n            }\n            else {\n                headers[\"content-length\"] = 0;\n            }\n        }\n    }\n    // default content-type for JSON if body is set\n    if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n        headers[\"content-type\"] = \"application/json; charset=utf-8\";\n    }\n    // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n    // fetch does not allow to set `content-length` header, but we can set body to an empty string\n    if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n        body = \"\";\n    }\n    // Only return body/request keys if present\n    return Object.assign({ method, url, headers }, typeof body !== \"undefined\" ? { body } : null, options.request ? { request: options.request } : null);\n}\n","import { merge } from \"./merge\";\nimport { parse } from \"./parse\";\nexport function endpointWithDefaults(defaults, route, options) {\n    return parse(merge(defaults, route, options));\n}\n","import { endpointWithDefaults } from \"./endpoint-with-defaults\";\nimport { merge } from \"./merge\";\nimport { parse } from \"./parse\";\nexport function withDefaults(oldDefaults, newDefaults) {\n    const DEFAULTS = merge(oldDefaults, newDefaults);\n    const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n    return Object.assign(endpoint, {\n        DEFAULTS,\n        defaults: withDefaults.bind(null, DEFAULTS),\n        merge: merge.bind(null, DEFAULTS),\n        parse,\n    });\n}\n","export const VERSION = \"6.0.11\";\n","import { getUserAgent } from \"universal-user-agent\";\nimport { VERSION } from \"./version\";\nconst userAgent = `octokit-endpoint.js/${VERSION} ${getUserAgent()}`;\n// DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\nexport const DEFAULTS = {\n    method: \"GET\",\n    baseUrl: \"https://api.github.com\",\n    headers: {\n        accept: \"application/vnd.github.v3+json\",\n        \"user-agent\": userAgent,\n    },\n    mediaType: {\n        format: \"\",\n        previews: [],\n    },\n};\n","import { withDefaults } from \"./with-defaults\";\nimport { DEFAULTS } from \"./defaults\";\nexport const endpoint = withDefaults(null, DEFAULTS);\n"]},"metadata":{},"sourceType":"module"}