{"ast":null,"code":"// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\nexport var hasDisplayNone = element => window.getComputedStyle(element).display === \"none\";\nexport var hasTabIndex = element => element.hasAttribute(\"tabindex\");\nexport var hasNegativeTabIndex = element => hasTabIndex(element) && element.tabIndex === -1;\nexport function isDisabled(element) {\n  return Boolean(element.getAttribute(\"disabled\")) === true || Boolean(element.getAttribute(\"aria-disabled\")) === true;\n}\nexport function hasFocusWithin(element) {\n  if (!document.activeElement) return false;\n  return element.contains(document.activeElement);\n}\nexport function isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\nexport function isHidden(element) {\n  if (element.parentElement && isHidden(element.parentElement)) return true;\n  return element.hidden;\n}\nexport function isContentEditable(element) {\n  var value = element.getAttribute(\"contenteditable\");\n  return value !== \"false\" && value != null;\n}\nexport function isFocusable(element) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false;\n  }\n\n  var {\n    localName\n  } = element;\n  var focusableTags = [\"input\", \"select\", \"textarea\", \"button\"];\n  if (focusableTags.indexOf(localName) >= 0) return true;\n  var others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\")\n  };\n\n  if (localName in others) {\n    return others[localName]();\n  }\n\n  if (isContentEditable(element)) return true;\n  return hasTabIndex(element);\n}\nexport function isTabbable(element) {\n  if (!element) return false;\n  return isHTMLElement(element) && isFocusable(element) && !hasNegativeTabIndex(element);\n}","map":{"version":3,"sources":["../../src/tabbable.ts"],"names":["hasDisplayNone","element","window","hasTabIndex","hasNegativeTabIndex","Boolean","document","isHidden","value","isHTMLElement","isDisabled","localName","focusableTags","others","a","audio","video","isContentEditable","isFocusable"],"mappings":"AAAA;AACA;AAEA,OAAO,IAAMA,cAAc,GAAIC,OAAD,IAC5BC,MAAM,CAANA,gBAAAA,CAAAA,OAAAA,EAAAA,OAAAA,KADK,MAAA;AAGP,OAAO,IAAMC,WAAW,GAAIF,OAAD,IACzBA,OAAO,CAAPA,YAAAA,CADK,UACLA,CADK;AAGP,OAAO,IAAMG,mBAAmB,GAAIH,OAAD,IACjCE,WAAW,CAAXA,OAAW,CAAXA,IAAwBF,OAAO,CAAPA,QAAAA,KAAqB,CADxC,CAAA;AAGP,OAAO,SAAA,UAAA,CAAA,OAAA,EAA0C;AAC/C,SACEI,OAAO,CAACJ,OAAO,CAAPA,YAAAA,CAARI,UAAQJ,CAAD,CAAPI,KAAAA,IAAAA,IACAA,OAAO,CAACJ,OAAO,CAAPA,YAAAA,CAARI,eAAQJ,CAAD,CAAPI,KAFF,IAAA;AAID;AAED,OAAO,SAAA,cAAA,CAAA,OAAA,EAA8C;AACnD,MAAI,CAACC,QAAQ,CAAb,aAAA,EAA6B,OAAA,KAAA;AAC7B,SAAOL,OAAO,CAAPA,QAAAA,CAAiBK,QAAQ,CAAhC,aAAOL,CAAP;AACD;AAED,OAAO,SAAA,aAAA,CAAA,OAAA,EAA6D;AAClE,SAAOA,OAAO,YAAd,WAAA;AACD;AAED,OAAO,SAAA,QAAA,CAAA,OAAA,EAAwC;AAC7C,MAAIA,OAAO,CAAPA,aAAAA,IAAyBM,QAAQ,CAACN,OAAO,CAA7C,aAAqC,CAArC,EAA8D,OAAA,IAAA;AAC9D,SAAOA,OAAO,CAAd,MAAA;AACD;AAED,OAAO,SAAA,iBAAA,CAAA,OAAA,EAAiD;AACtD,MAAMO,KAAK,GAAGP,OAAO,CAAPA,YAAAA,CAAd,iBAAcA,CAAd;AACA,SAAOO,KAAK,KAALA,OAAAA,IAAqBA,KAAK,IAAjC,IAAA;AACD;AAED,OAAO,SAAA,WAAA,CAAA,OAAA,EAA2C;AAChD,MAAI,CAACC,aAAa,CAAd,OAAc,CAAd,IAA2BF,QAAQ,CAAnC,OAAmC,CAAnC,IAAgDG,UAAU,CAA9D,OAA8D,CAA9D,EAAyE;AACvE,WAAA,KAAA;AACD;;AAED,MAAM;AAAEC,IAAAA;AAAF,MAAN,OAAA;AACA,MAAMC,aAAa,GAAG,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAtB,QAAsB,CAAtB;AACA,MAAIA,aAAa,CAAbA,OAAAA,CAAAA,SAAAA,KAAJ,CAAA,EAA2C,OAAA,IAAA;AAE3C,MAAMC,MAAM,GAAG;AACbC,IAAAA,CAAC,EAAE,MAAMb,OAAO,CAAPA,YAAAA,CADI,MACJA,CADI;AAEbc,IAAAA,KAAK,EAAE,MAAMd,OAAO,CAAPA,YAAAA,CAFA,UAEAA,CAFA;AAGbe,IAAAA,KAAK,EAAE,MAAMf,OAAO,CAAPA,YAAAA,CAAAA,UAAAA;AAHA,GAAf;;AAMA,MAAIU,SAAS,IAAb,MAAA,EAAyB;AACvB,WAAOE,MAAM,CAAb,SAAa,CAANA,EAAP;AACD;;AAED,MAAII,iBAAiB,CAArB,OAAqB,CAArB,EAAgC,OAAA,IAAA;AAEhC,SAAOd,WAAW,CAAlB,OAAkB,CAAlB;AACD;AAED,OAAO,SAAA,UAAA,CAAA,OAAA,EAAkD;AACvD,MAAI,CAAJ,OAAA,EAAc,OAAA,KAAA;AACd,SACEM,aAAa,CAAbA,OAAa,CAAbA,IACAS,WAAW,CADXT,OACW,CADXA,IAEA,CAACL,mBAAmB,CAHtB,OAGsB,CAHtB;AAKD","sourcesContent":["// Really great work done by Diego Haz on this one\n// https://github.com/reakit/reakit/blob/master/packages/reakit-utils/src/tabbable.ts\n\nexport const hasDisplayNone = (element: HTMLElement) =>\n  window.getComputedStyle(element).display === \"none\"\n\nexport const hasTabIndex = (element: HTMLElement) =>\n  element.hasAttribute(\"tabindex\")\n\nexport const hasNegativeTabIndex = (element: HTMLElement) =>\n  hasTabIndex(element) && element.tabIndex === -1\n\nexport function isDisabled(element: HTMLElement) {\n  return (\n    Boolean(element.getAttribute(\"disabled\")) === true ||\n    Boolean(element.getAttribute(\"aria-disabled\")) === true\n  )\n}\n\nexport function hasFocusWithin(element: HTMLElement) {\n  if (!document.activeElement) return false\n  return element.contains(document.activeElement)\n}\n\nexport function isHTMLElement(element: any): element is HTMLElement {\n  return element instanceof HTMLElement\n}\n\nexport function isHidden(element: HTMLElement) {\n  if (element.parentElement && isHidden(element.parentElement)) return true\n  return element.hidden\n}\n\nexport function isContentEditable(element: HTMLElement) {\n  const value = element.getAttribute(\"contenteditable\")\n  return value !== \"false\" && value != null\n}\n\nexport function isFocusable(element: HTMLElement) {\n  if (!isHTMLElement(element) || isHidden(element) || isDisabled(element)) {\n    return false\n  }\n\n  const { localName } = element\n  const focusableTags = [\"input\", \"select\", \"textarea\", \"button\"]\n  if (focusableTags.indexOf(localName) >= 0) return true\n\n  const others = {\n    a: () => element.hasAttribute(\"href\"),\n    audio: () => element.hasAttribute(\"controls\"),\n    video: () => element.hasAttribute(\"controls\"),\n  }\n\n  if (localName in others) {\n    return others[localName as keyof typeof others]()\n  }\n\n  if (isContentEditable(element)) return true\n\n  return hasTabIndex(element)\n}\n\nexport function isTabbable(element?: HTMLElement | null) {\n  if (!element) return false\n  return (\n    isHTMLElement(element) &&\n    isFocusable(element) &&\n    !hasNegativeTabIndex(element)\n  )\n}\n"]},"metadata":{},"sourceType":"module"}